CMAKE_MINIMUM_REQUIRED(VERSION 3.12)
project(usd)

include(ExternalProject)

set(CMAKE_ARGS
    -DBOOST_ROOT=$ENV{REZ_BOOST_ROOT}
    -DTBB_ROOT_DIR=$ENV{REZ_TBB_ROOT}
    -DPXR_ENABLE_OPENVDB_SUPPORT=FALSE
    -DPXR_OPENSUBDIV_SUPPORT=ON
    -DPXR_ENABLE_GL_SUPPORT=OFF
    -DOPENSUBDIV_ROOT_DIR=$ENV{REZ_OPENSUBDIV_ROOT}
    -DPXR_ENABLE_OSL_SUPPORT=OFF
    -DPXR_ENABLE_PTEX_SUPPORT=OFF
    -DPXR_ENABLE_ALEMBIC_SUPPORT=OFF
    -DPXR_BUILD_TESTS=OFF
    -DPXR_BUILD_OPENIMAGEIO_PLUGIN=OFF
    -DPXR_BUILD_ALEMBIC_PLUGIN=OFF
    -DPXR_BUILD_EMBREE_PLUGIN=OFF
    -DPXR_ENABLE_HDF5_SUPPORT=FALSE
    -DPXR_ENABLE_MATERIALX_SUPPORT=FALSE
    -DPython3_ROOT_DIR=$ENV{REZ_PYTHON_ROOT}
    -DPython3_FIND_STRATEGY=LOCATION
    -DOPENEXR_LOCATION=$ENV{REZ_OPENEXR_ROOT}/lib
    -DBOOST_PYTHON_VERSION=$ENV{REZ_PYTHON_VERSION}
    -DPXR_BUILD_DOCUMENTATION=FALSE
    -DPXR_BUILD_USD_TOOLS=FALSE
    -DPXR_BUILD_TUTORIALS=FALSE
    -DPXR_BUILD_IMAGING=OFF
    #-DCMAKE_CXX_FLAGS="-DTBB_USE_LEGACY_API=1 -DTBB_USE_LEGACY_TASK_API=1"
)


# We configure/build/install USD through the ExternalProject_Add macro,
# using three different shell scripts for each of these steps.
# If necessary, it is possible to skip one of these steps by replacing the command
# by "", an empty string.
ExternalProject_Add(
    usd
    URL https://github.com/PixarAnimationStudios/USD/archive/v24.03.tar.gz
    SOURCE_DIR src
    PATCH_COMMAND ""
    UPDATE_COMMAND ""
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} ${CMAKE_ARGS}
    INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/install
)

install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/install/ DESTINATION .)
